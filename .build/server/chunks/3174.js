"use strict";exports.id=3174,exports.ids=[3174],exports.modules={20591:(r,e,t)=>{t.d(e,{M:()=>c});var a=t(79520);let i=new a.f7({accessToken:process.env.MERCADO_PAGO_ACCESS_TOKEN,options:{timeout:5e3}}),n=new a.kX(i),s=new a.F6(i),o=new a.Jk(i);class c{static async createSubscription(r){try{let e={reason:`Suscripci\xf3n COMOD\xcdN IA - Plan ${r.planId}`,payer_email:r.email,back_url:r.backUrl,auto_recurring:{frequency:r.frequency,frequency_type:r.frequencyType,transaction_amount:r.amount,currency_id:r.currency,start_date:new Date().toISOString()},external_reference:r.organizationId,notification_url:r.notificationUrl,status:"pending"};return await n.create({body:e})}catch(r){throw console.error("Error creating MercadoPago subscription:",r),Error("Failed to create MercadoPago subscription")}}static async updateSubscription(r,e){try{let t={};return e.status&&(t.status=e.status),e.amount&&(t.auto_recurring={transaction_amount:e.amount}),await n.update({id:r,body:t})}catch(r){throw console.error("Error updating MercadoPago subscription:",r),Error("Failed to update MercadoPago subscription")}}static async cancelSubscription(r){try{return await n.update({id:r,body:{status:"cancelled"}})}catch(r){throw console.error("Error canceling MercadoPago subscription:",r),Error("Failed to cancel MercadoPago subscription")}}static async getSubscription(r){try{return await n.get({id:r})}catch(r){throw console.error("Error retrieving MercadoPago subscription:",r),Error("Failed to retrieve MercadoPago subscription")}}static async createPayment(r){try{let e={transaction_amount:r.amount,currency_id:r.currency,description:r.description,payer:{email:r.payerEmail},external_reference:r.externalReference,metadata:{organization_id:r.organizationId,source:"comodin_ia"}};return await s.create({body:e})}catch(r){throw console.error("Error creating MercadoPago payment:",r),Error("Failed to create MercadoPago payment")}}static async getPayment(r){try{return await s.get({id:r})}catch(r){throw console.error("Error retrieving MercadoPago payment:",r),Error("Failed to retrieve MercadoPago payment")}}static async createPreference(r){try{let e={items:[{id:`wallet_recharge_${r.organizationId}`,title:r.title,unit_price:r.price,quantity:1,currency_id:r.currency}],payer:{email:r.customerEmail},back_urls:{success:r.successUrl,failure:r.failureUrl,pending:r.pendingUrl},auto_return:"approved",external_reference:r.organizationId,statement_descriptor:"COMODIN IA",metadata:{organization_id:r.organizationId,type:"wallet_recharge",source:"comodin_ia",...r.metadata}},t=await o.create({body:e});return{preferenceId:t.id,initPoint:t.init_point}}catch(r){throw console.error("Error creating MercadoPago preference:",r),Error("Failed to create MercadoPago preference")}}static async processWebhookNotification(r){try{if("preapproval"===r.type){let e=r.data?.id||r.id,t=await this.getSubscription(e);return{type:"subscription",data:t}}if("payment"===r.type){let e=r.data?.id||r.id,t=await this.getPayment(e);return{type:"payment",data:t}}return null}catch(r){throw console.error("Error processing MercadoPago webhook notification:",r),Error("Failed to process MercadoPago webhook notification")}}}},19924:(r,e,t)=>{t.d(e,{t:()=>i});let a=new(t(33677)).Z(process.env.STRIPE_SECRET_KEY,{apiVersion:"2025-08-27.basil",typescript:!0});class i{static async createCustomer(r){try{return await a.customers.create({email:r.email,name:r.name,metadata:{organizationId:r.organizationId,source:"comodin_ia"}})}catch(r){throw console.error("Error creating Stripe customer:",r),Error("Failed to create Stripe customer")}}static async createSubscription(r){try{return await a.subscriptions.create({customer:r.customerId,items:[{price:r.priceId}],currency:r.currency,trial_period_days:r.trialPeriodDays,payment_behavior:"default_incomplete",payment_settings:{save_default_payment_method:"on_subscription"},expand:["latest_invoice.payment_intent"],metadata:{organizationId:r.organizationId,source:"comodin_ia"}})}catch(r){throw console.error("Error creating Stripe subscription:",r),Error("Failed to create Stripe subscription")}}static async updateSubscription(r,e){try{let t=await a.subscriptions.retrieve(r);return await a.subscriptions.update(r,{items:[{id:t.items.data[0].id,price:e}],proration_behavior:"create_prorations"})}catch(r){throw console.error("Error updating Stripe subscription:",r),Error("Failed to update Stripe subscription")}}static async cancelSubscription(r,e=!0){try{return await a.subscriptions.update(r,{cancel_at_period_end:e})}catch(r){throw console.error("Error canceling Stripe subscription:",r),Error("Failed to cancel Stripe subscription")}}static async getSubscription(r){try{return await a.subscriptions.retrieve(r,{expand:["latest_invoice","customer","items.data.price"]})}catch(r){throw console.error("Error retrieving Stripe subscription:",r),Error("Failed to retrieve Stripe subscription")}}static async createBillingPortalSession(r,e){try{return await a.billingPortal.sessions.create({customer:r,return_url:e})}catch(r){throw console.error("Error creating billing portal session:",r),Error("Failed to create billing portal session")}}static async createCheckoutSession(r){try{return await a.checkout.sessions.create({customer:r.customerId,customer_email:r.customerId?void 0:r.customerEmail,line_items:[{price:r.priceId,quantity:1}],mode:"subscription",success_url:r.successUrl,cancel_url:r.cancelUrl,subscription_data:{trial_period_days:r.trialPeriodDays,metadata:{organizationId:r.organizationId,source:"comodin_ia"}},metadata:{organizationId:r.organizationId,source:"comodin_ia"}})}catch(r){throw console.error("Error creating Stripe checkout session:",r),Error("Failed to create Stripe checkout session")}}static async createPaymentCheckoutSession(r){try{let e=await a.checkout.sessions.create({customer_email:r.customerEmail,line_items:[{price_data:{currency:r.currency.toLowerCase(),product_data:{name:r.description,description:`Recarga de billetera IA - ${r.organizationId}`},unit_amount:r.amount},quantity:1}],mode:"payment",success_url:r.successUrl,cancel_url:r.cancelUrl,metadata:{organizationId:r.organizationId,type:"wallet_recharge",amount:(r.amount/100).toString(),currency:r.currency,...r.metadata}});return{sessionId:e.id,sessionUrl:e.url}}catch(r){throw console.error("Error creating Stripe payment checkout session:",r),Error("Failed to create Stripe payment checkout session")}}static constructWebhookEvent(r,e){try{return a.webhooks.constructEvent(r,e,process.env.STRIPE_WEBHOOK_SECRET)}catch(r){throw console.error("Error constructing Stripe webhook event:",r),Error("Invalid Stripe webhook signature")}}}},17439:(r,e,t)=>{t.d(e,{lh:()=>n,oW:()=>o,ys:()=>s});var a=t(53524);let i={[a.SubscriptionPlan.FREE]:{id:a.SubscriptionPlan.FREE,name:"Gratuito",description:"Para probar COMOD\xcdN IA y comenzar a organizar tus comunicaciones",features:{maxUsers:1,maxMessages:100,maxIntegrations:1,hasAdvancedFeatures:!1,hasAnalytics:!1,hasAutomation:!1,hasAPIAccess:!1,supportLevel:"community"},pricing:{monthly:{usd:0,mxn:0,ars:0},yearly:{usd:0,mxn:0,ars:0}}},[a.SubscriptionPlan.STARTER]:{id:a.SubscriptionPlan.STARTER,name:"Emprendedor",description:"Perfecto para peque\xf1os negocios que est\xe1n comenzando",features:{maxUsers:3,maxMessages:1e3,maxIntegrations:3,hasAdvancedFeatures:!0,hasAnalytics:!0,hasAutomation:!1,hasAPIAccess:!1,supportLevel:"email"},pricing:{monthly:{usd:29,mxn:499,ars:8900},yearly:{usd:290,mxn:4990,ars:89e3}},popular:!0},[a.SubscriptionPlan.PREMIUM]:{id:a.SubscriptionPlan.PREMIUM,name:"Profesional",description:"Para equipos que necesitan funcionalidades avanzadas y automatizaci\xf3n",features:{maxUsers:10,maxMessages:5e3,maxIntegrations:10,hasAdvancedFeatures:!0,hasAnalytics:!0,hasAutomation:!0,hasAPIAccess:!0,supportLevel:"priority"},pricing:{monthly:{usd:79,mxn:1399,ars:24900},yearly:{usd:790,mxn:13990,ars:249e3}}},[a.SubscriptionPlan.ENTERPRISE]:{id:a.SubscriptionPlan.ENTERPRISE,name:"Empresarial",description:"Para organizaciones grandes con necesidades espec\xedficas y soporte dedicado",features:{maxUsers:50,maxMessages:2e4,maxIntegrations:50,hasAdvancedFeatures:!0,hasAnalytics:!0,hasAutomation:!0,hasAPIAccess:!0,supportLevel:"dedicated"},pricing:{monthly:{usd:199,mxn:3499,ars:62900},yearly:{usd:1990,mxn:34990,ars:629e3}}}};function n(r){return i[r]}function s(r,e,t,a){let n=i[r];return{usersExceeded:e>n.features.maxUsers,messagesExceeded:t>n.features.maxMessages,integrationsExceeded:a>n.features.maxIntegrations}}function o(r,e,t){return i[r].pricing[t][e]}},93174:(r,e,t)=>{t.d(e,{F:()=>p});var a=t(53524),i=t(83178),n=t(19924),s=t(20591),o=t(17439),c=t(47286),u=t(48005);function d(r,e,t){let a=(0,u.Q)(r,t?.in);if(isNaN(e))return(0,c.L)(t?.in||r,NaN);if(!e)return a;let i=a.getDate(),n=(0,c.L)(t?.in||r,a.getTime());return(n.setMonth(a.getMonth()+e+1,0),i>=n.getDate())?n:(a.setFullYear(n.getFullYear(),n.getMonth(),i),a)}var l=t(43693);class p{static async createSubscription(r){try{if(!await i.db.organization.findUnique({where:{id:r.organizationId}}))throw Error("Organization not found");let e=(0,o.lh)(r.plan),t=new Date,n=d(t,"yearly"===r.billingCycle?12:1),s=null,c=null;r.trialDays&&r.trialDays>0&&(s=t,c=(0,l.E)(t,r.trialDays));let u=await i.db.subscription.create({data:{organizationId:r.organizationId,plan:r.plan,status:r.trialDays?a.SubscriptionStatus.TRIALING:a.SubscriptionStatus.ACTIVE,paymentProvider:r.paymentProvider,pricePerMonth:e.pricing.monthly.usd,currency:r.currency,billingCycle:r.billingCycle,currentPeriodStart:t,currentPeriodEnd:n,trialStart:s,trialEnd:c,metadata:{customerEmail:r.customerEmail,planName:e.name}}});return await this.updateOrganizationLimits(r.organizationId,r.plan,u.id),u}catch(r){throw console.error("Error creating subscription:",r),Error("Failed to create subscription")}}static async updateOrganizationLimits(r,e,t){try{let a=(0,o.lh)(e),n=d(new Date,1);await i.db.organization.update({where:{id:r},data:{currentPlan:e,subscriptionId:t||null,maxUsers:a.features.maxUsers,maxMessages:a.features.maxMessages,maxIntegrations:a.features.maxIntegrations,hasAdvancedFeatures:a.features.hasAdvancedFeatures,usageResetDate:n}})}catch(r){throw console.error("Error updating organization limits:",r),Error("Failed to update organization limits")}}static async changePlan(r,e,t="monthly"){try{let n=await i.db.organization.findUnique({where:{id:r},include:{subscriptions:{where:{status:{in:[a.SubscriptionStatus.ACTIVE,a.SubscriptionStatus.TRIALING]}}}}});if(!n)throw Error("Organization not found");let c=n.subscriptions[0];if(!c)throw Error("No active subscription found");if(c.paymentProvider===a.PaymentProvider.STRIPE&&c.stripeSubscriptionId);else if(c.paymentProvider===a.PaymentProvider.MERCADO_PAGO&&c.mercadopagoPreapprovalId){let r=(0,o.lh)(e),a="yearly"===t?r.pricing.yearly.usd:r.pricing.monthly.usd;await s.M.updateSubscription(c.mercadopagoPreapprovalId,{amount:a})}let u=await i.db.subscription.update({where:{id:c.id},data:{plan:e,billingCycle:t,pricePerMonth:(0,o.lh)(e).pricing.monthly.usd}});return await this.updateOrganizationLimits(r,e,u.id),u}catch(r){throw console.error("Error changing subscription plan:",r),Error("Failed to change subscription plan")}}static async cancelSubscription(r,e=!0){try{let t=await i.db.subscription.findFirst({where:{organizationId:r,status:{in:[a.SubscriptionStatus.ACTIVE,a.SubscriptionStatus.TRIALING]}}});if(!t)throw Error("No active subscription found");t.paymentProvider===a.PaymentProvider.STRIPE&&t.stripeSubscriptionId?await n.t.cancelSubscription(t.stripeSubscriptionId,e):t.paymentProvider===a.PaymentProvider.MERCADO_PAGO&&t.mercadopagoPreapprovalId&&await s.M.cancelSubscription(t.mercadopagoPreapprovalId);let o=await i.db.subscription.update({where:{id:t.id},data:{status:e?a.SubscriptionStatus.ACTIVE:a.SubscriptionStatus.CANCELED,cancelAtPeriodEnd:e,canceledAt:new Date}});return e||await this.updateOrganizationLimits(r,a.SubscriptionPlan.FREE),o}catch(r){throw console.error("Error canceling subscription:",r),Error("Failed to cancel subscription")}}static async getSubscriptionUsage(r){try{let e=await i.db.organization.findUnique({where:{id:r}});if(!e)throw Error("Organization not found");let t=(0,o.ys)(e.currentPlan,e.currentUsers,e.currentMessages,0);return{currentUsers:e.currentUsers,currentMessages:e.currentMessages,currentIntegrations:0,limitsExceeded:t.usersExceeded||t.messagesExceeded||t.integrationsExceeded,resetDate:e.usageResetDate}}catch(r){throw console.error("Error getting subscription usage:",r),Error("Failed to get subscription usage")}}static async incrementMessageUsage(r,e=1){try{await i.db.organization.update({where:{id:r},data:{currentMessages:{increment:e}}})}catch(r){throw console.error("Error incrementing message usage:",r),Error("Failed to increment message usage")}}static async resetMonthlyUsage(r){try{let e=d(new Date,1);await i.db.organization.update({where:{id:r},data:{currentMessages:0,usageResetDate:e}})}catch(r){throw console.error("Error resetting monthly usage:",r),Error("Failed to reset monthly usage")}}static async validateSubscriptionAccess(r){try{var e,t;let n=await i.db.organization.findUnique({where:{id:r},include:{subscriptions:{where:{status:{in:[a.SubscriptionStatus.ACTIVE,a.SubscriptionStatus.TRIALING]}},orderBy:{createdAt:"desc"},take:1}}});if(!n)return{hasAccess:!1,reason:"Organization not found"};let s=n.subscriptions[0];if(!s&&n.currentPlan!==a.SubscriptionPlan.FREE)return{hasAccess:!1,reason:"No active subscription"};if(s&&(e=new Date,t=s.currentPeriodEnd,+(0,u.Q)(e)>+(0,u.Q)(t)))return{hasAccess:!1,reason:"Subscription expired"};let o=await this.getSubscriptionUsage(r);if(o.limitsExceeded)return{hasAccess:!1,reason:"Usage limits exceeded",usage:o};return{hasAccess:!0,usage:o}}catch(r){return console.error("Error validating subscription access:",r),{hasAccess:!1,reason:"Validation error"}}}static async handleFailedPayment(r){try{let e=await i.db.subscription.findFirst({where:{organizationId:r,status:a.SubscriptionStatus.ACTIVE}});if(!e)return;await i.db.subscription.update({where:{id:e.id},data:{status:a.SubscriptionStatus.PAST_DUE}}),await this.updateOrganizationLimits(r,a.SubscriptionPlan.FREE)}catch(r){throw console.error("Error handling failed payment:",r),Error("Failed to handle failed payment")}}static async getSubscriptionDetails(r){try{let e=await i.db.organization.findUnique({where:{id:r},include:{subscriptions:{orderBy:{createdAt:"desc"},take:1,include:{payments:{orderBy:{createdAt:"desc"},take:5}}}}});if(!e)throw Error("Organization not found");let t=(0,o.lh)(e.currentPlan),a=await this.getSubscriptionUsage(r);return{organization:e,currentSubscription:e.subscriptions[0]||null,planConfig:t,usage:a,recentPayments:e.subscriptions[0]?.payments||[]}}catch(r){throw console.error("Error getting subscription details:",r),Error("Failed to get subscription details")}}}},43693:(r,e,t)=>{t.d(e,{E:()=>n});var a=t(47286),i=t(48005);function n(r,e,t){let n=(0,i.Q)(r,t?.in);return isNaN(e)?(0,a.L)(t?.in||r,NaN):(e&&n.setDate(n.getDate()+e),n)}},47286:(r,e,t)=>{t.d(e,{L:()=>i});let a=Symbol.for("constructDateFrom");function i(r,e){return"function"==typeof r?r(e):r&&"object"==typeof r&&a in r?r[a](e):r instanceof Date?new r.constructor(e):new Date(e)}},48005:(r,e,t)=>{t.d(e,{Q:()=>i});var a=t(47286);function i(r,e){return(0,a.L)(e||r,r)}}};