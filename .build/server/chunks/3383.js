"use strict";exports.id=3383,exports.ids=[3383],exports.modules={19175:(e,t,r)=>{r.d(t,{Z:()=>o});let o=(0,r(71945).Z)("Lock",[["rect",{width:"18",height:"11",x:"3",y:"11",rx:"2",ry:"2",key:"1w4ew1"}],["path",{d:"M7 11V7a5 5 0 0 1 10 0v4",key:"fwvmzm"}]])},97718:(e,t,r)=>{r.d(t,{Z:()=>o});let o=(0,r(71945).Z)("Plus",[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"M12 5v14",key:"s699le"}]])},21680:(e,t,r)=>{r.d(t,{Z:()=>o});let o=(0,r(71945).Z)("TriangleAlert",[["path",{d:"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3",key:"wmoenq"}],["path",{d:"M12 9v4",key:"juzpu7"}],["path",{d:"M12 17h.01",key:"p32p05"}]])},13443:(e,t,r)=>{r.d(t,{$j:()=>P,Dx:()=>$,VY:()=>E,aU:()=>V,aV:()=>_,dk:()=>T,fC:()=>O,h_:()=>F,xz:()=>k});var o=r(24383),n=r(89291),a=r(56163),i=r(18832),l=r(1940),s=r(42049),d=r(62901),u="AlertDialog",[c,p]=(0,n.b)(u,[i.p8]),f=(0,i.p8)(),g=e=>{let{__scopeAlertDialog:t,...r}=e,o=f(t);return(0,d.jsx)(i.fC,{...o,...r,modal:!0})};g.displayName=u;var m=o.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...o}=e,n=f(r);return(0,d.jsx)(i.xz,{...n,...o,ref:t})});m.displayName="AlertDialogTrigger";var h=e=>{let{__scopeAlertDialog:t,...r}=e,o=f(t);return(0,d.jsx)(i.h_,{...o,...r})};h.displayName="AlertDialogPortal";var y=o.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...o}=e,n=f(r);return(0,d.jsx)(i.aV,{...n,...o,ref:t})});y.displayName="AlertDialogOverlay";var x="AlertDialogContent",[v,D]=c(x),j=o.forwardRef((e,t)=>{let{__scopeAlertDialog:r,children:n,...u}=e,c=f(r),p=o.useRef(null),g=(0,a.e)(t,p),m=o.useRef(null);return(0,d.jsx)(i.jm,{contentName:x,titleName:w,docsSlug:"alert-dialog",children:(0,d.jsx)(v,{scope:r,cancelRef:m,children:(0,d.jsxs)(i.VY,{role:"alertdialog",...c,...u,ref:g,onOpenAutoFocus:(0,l.M)(u.onOpenAutoFocus,e=>{e.preventDefault(),m.current?.focus({preventScroll:!0})}),onPointerDownOutside:e=>e.preventDefault(),onInteractOutside:e=>e.preventDefault(),children:[(0,d.jsx)(s.A4,{children:n}),(0,d.jsx)(M,{contentRef:p})]})})})});j.displayName=x;var w="AlertDialogTitle",b=o.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...o}=e,n=f(r);return(0,d.jsx)(i.Dx,{...n,...o,ref:t})});b.displayName=w;var R="AlertDialogDescription",N=o.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...o}=e,n=f(r);return(0,d.jsx)(i.dk,{...n,...o,ref:t})});N.displayName=R;var A=o.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...o}=e,n=f(r);return(0,d.jsx)(i.x8,{...n,...o,ref:t})});A.displayName="AlertDialogAction";var C="AlertDialogCancel",I=o.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...o}=e,{cancelRef:n}=D(C,r),l=f(r),s=(0,a.e)(t,n);return(0,d.jsx)(i.x8,{...l,...o,ref:s})});I.displayName=C;var M=({contentRef:e})=>{let t=`\`${x}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${x}\` by passing a \`${R}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${x}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return o.useEffect(()=>{document.getElementById(e.current?.getAttribute("aria-describedby"))||console.warn(t)},[t,e]),null},O=g,k=m,F=h,_=y,E=j,V=A,P=I,$=b,T=N},18832:(e,t,r)=>{r.d(t,{Dx:()=>er,VY:()=>et,aV:()=>ee,dk:()=>eo,fC:()=>G,h_:()=>Q,jm:()=>H,p8:()=>j,x8:()=>en,xz:()=>J});var o=r(24383),n=r(1940),a=r(56163),i=r(89291),l=r(50430),s=r(98106),d=r(8378),u=r(59293),c=r(4764),p=r(52490),f=r(74132),g=r(23883),m=r(81214),h=r(51627),y=r(42049),x=r(62901),v="Dialog",[D,j]=(0,i.b)(v),[w,b]=D(v),R=e=>{let{__scopeDialog:t,children:r,open:n,defaultOpen:a,onOpenChange:i,modal:d=!0}=e,u=o.useRef(null),c=o.useRef(null),[p=!1,f]=(0,s.T)({prop:n,defaultProp:a,onChange:i});return(0,x.jsx)(w,{scope:t,triggerRef:u,contentRef:c,contentId:(0,l.M)(),titleId:(0,l.M)(),descriptionId:(0,l.M)(),open:p,onOpenChange:f,onOpenToggle:o.useCallback(()=>f(e=>!e),[f]),modal:d,children:r})};R.displayName=v;var N="DialogTrigger",A=o.forwardRef((e,t)=>{let{__scopeDialog:r,...o}=e,i=b(N,r),l=(0,a.e)(t,i.triggerRef);return(0,x.jsx)(f.WV.button,{type:"button","aria-haspopup":"dialog","aria-expanded":i.open,"aria-controls":i.contentId,"data-state":q(i.open),...o,ref:l,onClick:(0,n.M)(e.onClick,i.onOpenToggle)})});A.displayName=N;var C="DialogPortal",[I,M]=D(C,{forceMount:void 0}),O=e=>{let{__scopeDialog:t,forceMount:r,children:n,container:a}=e,i=b(C,t);return(0,x.jsx)(I,{scope:t,forceMount:r,children:o.Children.map(n,e=>(0,x.jsx)(p.z,{present:r||i.open,children:(0,x.jsx)(c.h,{asChild:!0,container:a,children:e})}))})};O.displayName=C;var k="DialogOverlay",F=o.forwardRef((e,t)=>{let r=M(k,e.__scopeDialog),{forceMount:o=r.forceMount,...n}=e,a=b(k,e.__scopeDialog);return a.modal?(0,x.jsx)(p.z,{present:o||a.open,children:(0,x.jsx)(_,{...n,ref:t})}):null});F.displayName=k;var _=o.forwardRef((e,t)=>{let{__scopeDialog:r,...o}=e,n=b(k,r);return(0,x.jsx)(m.Z,{as:y.g7,allowPinchZoom:!0,shards:[n.contentRef],children:(0,x.jsx)(f.WV.div,{"data-state":q(n.open),...o,ref:t,style:{pointerEvents:"auto",...o.style}})})}),E="DialogContent",V=o.forwardRef((e,t)=>{let r=M(E,e.__scopeDialog),{forceMount:o=r.forceMount,...n}=e,a=b(E,e.__scopeDialog);return(0,x.jsx)(p.z,{present:o||a.open,children:a.modal?(0,x.jsx)(P,{...n,ref:t}):(0,x.jsx)($,{...n,ref:t})})});V.displayName=E;var P=o.forwardRef((e,t)=>{let r=b(E,e.__scopeDialog),i=o.useRef(null),l=(0,a.e)(t,r.contentRef,i);return o.useEffect(()=>{let e=i.current;if(e)return(0,h.Ry)(e)},[]),(0,x.jsx)(T,{...e,ref:l,trapFocus:r.open,disableOutsidePointerEvents:!0,onCloseAutoFocus:(0,n.M)(e.onCloseAutoFocus,e=>{e.preventDefault(),r.triggerRef.current?.focus()}),onPointerDownOutside:(0,n.M)(e.onPointerDownOutside,e=>{let t=e.detail.originalEvent,r=0===t.button&&!0===t.ctrlKey;(2===t.button||r)&&e.preventDefault()}),onFocusOutside:(0,n.M)(e.onFocusOutside,e=>e.preventDefault())})}),$=o.forwardRef((e,t)=>{let r=b(E,e.__scopeDialog),n=o.useRef(!1),a=o.useRef(!1);return(0,x.jsx)(T,{...e,ref:t,trapFocus:!1,disableOutsidePointerEvents:!1,onCloseAutoFocus:t=>{e.onCloseAutoFocus?.(t),t.defaultPrevented||(n.current||r.triggerRef.current?.focus(),t.preventDefault()),n.current=!1,a.current=!1},onInteractOutside:t=>{e.onInteractOutside?.(t),t.defaultPrevented||(n.current=!0,"pointerdown"!==t.detail.originalEvent.type||(a.current=!0));let o=t.target;r.triggerRef.current?.contains(o)&&t.preventDefault(),"focusin"===t.detail.originalEvent.type&&a.current&&t.preventDefault()}})}),T=o.forwardRef((e,t)=>{let{__scopeDialog:r,trapFocus:n,onOpenAutoFocus:i,onCloseAutoFocus:l,...s}=e,c=b(E,r),p=o.useRef(null),f=(0,a.e)(t,p);return(0,g.EW)(),(0,x.jsxs)(x.Fragment,{children:[(0,x.jsx)(u.M,{asChild:!0,loop:!0,trapped:n,onMountAutoFocus:i,onUnmountAutoFocus:l,children:(0,x.jsx)(d.XB,{role:"dialog",id:c.contentId,"aria-describedby":c.descriptionId,"aria-labelledby":c.titleId,"data-state":q(c.open),...s,ref:f,onDismiss:()=>c.onOpenChange(!1)})}),(0,x.jsxs)(x.Fragment,{children:[(0,x.jsx)(L,{titleId:c.titleId}),(0,x.jsx)(X,{contentRef:p,descriptionId:c.descriptionId})]})]})}),W="DialogTitle",z=o.forwardRef((e,t)=>{let{__scopeDialog:r,...o}=e,n=b(W,r);return(0,x.jsx)(f.WV.h2,{id:n.titleId,...o,ref:t})});z.displayName=W;var Z="DialogDescription",B=o.forwardRef((e,t)=>{let{__scopeDialog:r,...o}=e,n=b(Z,r);return(0,x.jsx)(f.WV.p,{id:n.descriptionId,...o,ref:t})});B.displayName=Z;var S="DialogClose",Y=o.forwardRef((e,t)=>{let{__scopeDialog:r,...o}=e,a=b(S,r);return(0,x.jsx)(f.WV.button,{type:"button",...o,ref:t,onClick:(0,n.M)(e.onClick,()=>a.onOpenChange(!1))})});function q(e){return e?"open":"closed"}Y.displayName=S;var U="DialogTitleWarning",[H,K]=(0,i.k)(U,{contentName:E,titleName:W,docsSlug:"dialog"}),L=({titleId:e})=>{let t=K(U),r=`\`${t.contentName}\` requires a \`${t.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${t.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${t.docsSlug}`;return o.useEffect(()=>{e&&!document.getElementById(e)&&console.error(r)},[r,e]),null},X=({contentRef:e,descriptionId:t})=>{let r=K("DialogDescriptionWarning"),n=`Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${r.contentName}}.`;return o.useEffect(()=>{let r=e.current?.getAttribute("aria-describedby");t&&r&&!document.getElementById(t)&&console.warn(n)},[n,e,t]),null},G=R,J=A,Q=O,ee=F,et=V,er=z,eo=B,en=Y}};